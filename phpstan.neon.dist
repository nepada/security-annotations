includes:
    - vendor/phpstan/phpstan-strict-rules/rules.neon
    - vendor/phpstan/phpstan-nette/extension.neon
    - vendor/phpstan/phpstan-nette/rules.neon
    - vendor/spaze/phpstan-disallowed-calls/extension.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-dangerous-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-execution-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-insecure-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-loose-calls.neon
    - tests/PHPStan/disallowedCalls.neon
    - tests/PHPStan/shipmonk.neon

parameters:
    level: max
    paths:
        - src

    exceptions:
        implicitThrows: false
        check:
            missingCheckedExceptionInThrows: true
            tooWideThrowType: true
        uncheckedExceptionClasses:
            - LogicException
            - ReflectionException
            - Nette\InvalidStateException

    ignoreErrors:
        - # intended
            message: '~Property Nepada\\SecurityAnnotations\\RequirementsChecker::\$accessValidators with generic interface Nepada\\SecurityAnnotations\\AccessValidators\\AccessValidator does not specify its types: TAnnotation~'
            path: src/SecurityAnnotations/RequirementsChecker.php
        - # intended
            message: '~Method Nepada\\SecurityAnnotations\\RequirementsChecker::addAccessValidator\(\) has parameter \$accessValidator with generic interface Nepada\\SecurityAnnotations\\AccessValidators\\AccessValidator but does not specify its types: TAnnotation~'
            path: src/SecurityAnnotations/RequirementsChecker.php
        - # intended
            message: '~Method Nepada\\SecurityAnnotations\\RequirementsChecker::__construct\(\) has parameter \$accessValidators with generic interface Nepada\\SecurityAnnotations\\AccessValidators\\AccessValidator but does not specify its types: TAnnotation~'
            path: src/SecurityAnnotations/RequirementsChecker.php
        - # conditional type narrowing
            message: "#^Overwriting variable \\$resource while changing its type from Nette\\\\Security\\\\Resource to string$#"
            count: 1
            path: src/SecurityAnnotations/AccessValidators/PermissionValidator.php
        - # pre-validated config
            message: '#^Argument of an invalid type mixed supplied for foreach, only iterables are supported\.$#'
            identifier: foreach.nonIterable
            count: 1
            path: src/Bridges/SecurityAnnotationsDI/SecurityAnnotationsExtension.php
        - # pre-validated config
            message: '#^Parameter \#1 \$validator of method Nepada\\Bridges\\SecurityAnnotationsDI\\SecurityAnnotationsExtension\:\:getValidatorService\(\) expects string, mixed given\.$#'
            identifier: argument.type
            count: 1
            path: src/Bridges/SecurityAnnotationsDI/SecurityAnnotationsExtension.php
        - # pre-validated config
            message: '#^Parameter \#2 \.\.\.\$arrays of function array_merge expects array, mixed given\.$#'
            identifier: argument.type
            count: 1
            path: src/Bridges/SecurityAnnotationsDI/SecurityAnnotationsExtension.php
        -
            message: '#^Parameter \#1 \$callback of function array_map expects \(callable\(mixed\)\: mixed\)\|null, Closure\(Nette\\Security\\Role\|string\)\: string given\.$#'
            identifier: argument.type
            count: 1
            path: src/SecurityAnnotations/AccessValidators/RoleValidator.php
        - # covered by tests
            message: '#^Trait Nepada\\SecurityAnnotations\\SecuredComponents is used zero times and is not analysed\.$#'
            identifier: trait.unused
            count: 1
            path: src/SecurityAnnotations/SecuredComponents.php
        - # covered by tests
            message: '#^Trait Nepada\\SecurityAnnotations\\SecurityAnnotations is used zero times and is not analysed\.$#'
            identifier: trait.unused
            count: 1
            path: src/SecurityAnnotations/SecurityAnnotations.php
